{
  "_args": [
    [
      {
        "raw": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
        "spec": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
        "type": "local"
      },
      "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/apm-install-dir-11684-3024-5utzmo"
    ]
  ],
  "_from": "../d-11684-3024-ouyf55/package.tgz",
  "_id": "linter-eslint@7.2.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/linter-eslint",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
    "spec": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11684-3024-ouyf55/package.tgz",
  "_shasum": "371a7f7e5894d445f782b94cec8144d55b32b6bb",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/d-11684-3024-ouyf55/package.tgz",
  "_where": "/private/var/folders/zf/nsgc94ld4qb4cq6ncghtgydm0000gn/T/apm-install-dir-11684-3024-5utzmo",
  "bugs": {
    "url": "https://github.com/AtomLinter/linter-eslint/issues"
  },
  "dependencies": {
    "atom-linter": "^5.0.1",
    "atom-package-deps": "^4.0.1",
    "consistent-path": "^2.0.1",
    "escape-html": "^1.0.3",
    "eslint": "^2.11.1",
    "process-communication": "^1.1.0",
    "resolve-env": "^1.0.0"
  },
  "description": "Lint JavaScript on the fly, using ESLint",
  "devDependencies": {
    "babel-preset-steelbrain": "^2.0.1",
    "eslint-config-airbnb-base": "^3.0.1",
    "eslint-plugin-import": "^1.7.0",
    "ucompiler": "^3.2.0",
    "ucompiler-plugin-babel": "^3.0.0",
    "ucompiler-plugin-newline": "^3.0.0"
  },
  "engines": {
    "atom": ">=1.8.0 <2.0.0"
  },
  "eslintConfig": {
    "rules": {
      "no-console": 0,
      "semi": [
        2,
        "never"
      ],
      "func-names": 0,
      "no-param-reassign": [
        2,
        {
          "props": false
        }
      ],
      "comma-dangle": 0,
      "no-underscore-dangle": 0,
      "global-require": 0,
      "import/no-unresolved": [
        2,
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "extends": "airbnb-base",
    "globals": {
      "atom": "true"
    },
    "env": {
      "es6": true,
      "node": true
    }
  },
  "homepage": "https://github.com/AtomLinter/linter-eslint#readme",
  "license": "MIT",
  "main": "./lib/main",
  "name": "linter-eslint",
  "optionalDependencies": {},
  "package-deps": [
    "linter"
  ],
  "providedServices": {
    "linter": {
      "versions": {
        "1.0.0": "provideLinter"
      }
    }
  },
  "readme": "# linter-eslint\n\n[![Build Status](https://travis-ci.org/AtomLinter/linter-eslint.svg)](https://travis-ci.org/AtomLinter/linter-eslint)\n[![Dependency Status](https://david-dm.org/AtomLinter/linter-eslint.svg)](https://david-dm.org/AtomLinter/linter-eslint)\n\nThis linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides\nan interface to [eslint](http://eslint.org). It will be used with files that\nhave the \"JavaScript\" syntax.\n\n## Installation\n\n```ShellSession\napm install linter-eslint\n```\n\n`linter-eslint` will look for a version of `eslint` local to your project and\nuse it if it's available. If none is found it will fall back to the version it\nships with.\n\nLets say you depend on a specific version of `eslint`, maybe it has unreleased\nfeatures, maybe it's just newer than what `linter-eslint` ships with. If\n`your-project/node_modules/eslint` exists `linter-eslint` will be used.\nThis package requires an `eslint` of at least v1.0.0.\n\nNote that if you do not have the `linter` package installed it will be\ninstalled\nfor you. If you are using an alternative `linter-*` consumer feel free\nto disable the `linter` package.\n\n## Use with plugins\n\nYou have two options:\n\n*   Install locally to your project `eslint` and the plugin\n\n    *   `$ npm i --save-dev eslint [eslint-plugins]`\n\n*   Install globaly `eslint` and plugins\n\n    *   `$ npm i -g eslint [eslint-plugins]`\n    *   Activate `Use Global Eslint` package option\n    *   (Optional) Set `Global Node Path` with `$ npm config get prefix`\n\n## Using ESLint\n\nNote that recent versions of ESLint do not use any rules by-default. This\nmeans you have to specify a configuration file for your project!\n\nTo do this in a straightforward way run this:\n\n```ShellSession\neslint --init\n```\n\nAlternatively you can create the `.eslintrc` file by yourself. It is a good\nidea to have a look at the [Get Started With ESLint](http://devnull.guru/get-started-with-eslint/)\nblog post by [IanVS](https://github.com/IanVS) and [the ESLint documentation](http://eslint.org/docs/user-guide/configuring),\nincluding the [list of rules](http://eslint.org/docs/rules/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AtomLinter/linter-eslint.git"
  },
  "scripts": {
    "compile": "ucompiler go",
    "lint": "eslint .",
    "test": "apm test",
    "watch": "ucompiler watch"
  },
  "version": "7.2.4"
}
